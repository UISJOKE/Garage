# Generated by Django 4.2.5 on 2023-10-03 13:12

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.IntegerField(auto_created=True, editable=False, primary_key=True, serialize=False)),
                ('photo', models.ImageField(blank=True, upload_to='static/car_photo')),
                ('type', models.CharField(blank=True, choices=[('Легковая', 'Легковая'), ('Грузовая', 'Грузовая'), ('Прицеп', 'Прицеп')], max_length=250)),
                ('registration_number', models.CharField(blank=True, max_length=8)),
                ('start_mileage', models.DecimalField(blank=True, decimal_places=2, max_digits=15)),
                ('VIN', models.CharField(blank=True, max_length=30, null=True)),
                ('board_number', models.CharField(blank=True, max_length=30, null=True)),
                ('passport_number', models.CharField(blank=True, max_length=30, null=True)),
                ('pasport_date', models.DateField(blank=True, null=True)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('board_color', models.CharField(blank=True, max_length=15)),
                ('year', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CarMark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250)),
                ('model', models.CharField(blank=True, max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('form', models.CharField(blank=True, choices=[('ООО', 'ООО'), ('ОAО', 'ОAО'), ('ИП', 'ИП'), ('ЧП', 'ЧП'), ('АКБ', 'АКБ'), ('ЗАО', 'ЗАО'), ('НПО', 'НПО'), ('НПП', 'НПП'), ('ТОО', 'ТОО'), ('ГУП', 'ГУП')], max_length=250)),
                ('active', models.CharField(blank=True, choices=[('Да', 'Да'), ('Нет', 'Нет')], max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_m', models.DateField(blank=True)),
                ('type_m', models.CharField(blank=True, max_length=50)),
                ('millage', models.IntegerField(blank=True)),
                ('spare_parts', models.CharField(blank=True, max_length=250)),
                ('description', models.CharField(blank=True, max_length=1500)),
                ('price_of_work', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('price_of_spare_parts', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('summ', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='static/files')),
                ('Car_m', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='Park.car')),
            ],
        ),
        migrations.CreateModel(
            name='Gas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_g', models.DateField(blank=True)),
                ('gas_type', models.CharField(blank=True, choices=[('АИ-80', 'АИ-80'), ('АИ-92', 'АИ-92'), ('АИ-95', 'АИ-95'), ('АИ-95+', 'АИ-95+'), ('АИ-98', 'АИ-98'), ('АИ-100', 'АИ-100'), ('ДТ', 'ДТ')], max_length=25)),
                ('RBF', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('ammount', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('summ_g', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=5)),
                ('Car_g', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='Park.car')),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='mark',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='Park.carmark'),
        ),
        migrations.AddField(
            model_name='car',
            name='organization',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='Park.organisation'),
        ),
    ]
